generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum CartStatus {
  PENDING
  IN_PAYMENT
}

enum PaymentStatus {
  PENDING
  SUCCESS
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  role     Role    @default(USER)
  name     String
  password String
  email    String  @unique
  phone    String?
  Shelf    Shelf[]
  Cart     Cart[]

  @@map("users")
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Int
  status    CartStatus @default(PENDING)
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @map("user_id") @db.ObjectId
  product   Product    @relation(fields: [productId], references: [id])
  productId String     @map("product_id") @db.ObjectId

  @@map("carts")
}

model Payment {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  totalQuantity Int           @map("total_quantity")
  totalPrice    Int           @map("total_price")
  method        String
  createdAt     DateTime      @default(now()) @map("created_at")
  status        PaymentStatus @default(PENDING)

  @@map("payments")
}

model Product {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  img        String
  detail     String
  price      Int
  quantity   Int      @default(1)
  author     String
  publisher  String
  url        String?
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @map("category_id") @db.ObjectId
  Shelf      Shelf[]
  Cart       Cart[]

  @@map("products")
}

model Category {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  product Product[]

  @@map("categories")
}

model Shelf {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @map("user_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id") @db.ObjectId

  @@map("shelfs")
}
